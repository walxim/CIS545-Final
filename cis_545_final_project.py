# -*- coding: utf-8 -*-
"""CIS-545 Final Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1s5T-nMdvIIO_PXb722pSJam5A_lLmmKT

#Introduction
Welcome to the final project by Michael (Shuangyu) Han, Mars (Runzhi) Gu, and Steven Walxim

In this project, we will attempt to predict global temperature change based on the population, GDP, carbon emission, and deforestation of different geographical locations

We will achieve this goal by extracting data from difference reliable sources, cleaning, visualizing, and modeling the data

#Cleaning
"""

!pip install googledrivedownloader

"""Import Data Files from Google Drive"""

#global temperature
!gdown 1a7NAbGr7aTxvUaB0pZIM58lpxOpim0OQ --id
#by City
!gdown 1CFr_HZd_dQjvxSQR1buElJrW8ZUJrXF2 --id
#by Major City
!gdown 1JhZwWcdOI4D4Ta-cDw26p5hhQ6uEWFP2 --id
#by State
!gdown 1ExxCrfEhLIgh8tTkswcoQKRrNjGdT-Mo --id
#by Country
!gdown 1rPogwew95J2oL6kYetdEZeNbSFzmQEev --id

#GDP
!gdown 1q3xv60tw0Vb3E_KlqAcVV_ef_g7ZonE7 --id
#Population
!gdown 1mcOZ4o3F0Mt44NOMMSNyhnu6isdd0kgk --id
#Deforestation
!gdown 1QHSh5V34l9khRJixJ2jjLZzJnc_bj_IW --id
#Carbon Emission
!gdown 1prQnwFxAAq27m9HxiLZdaQLFeQyGo_qI --id

"""Import Tools to Use in Project"""

import pandas as pd

"""Importing Global Temperature CSV Files into Pandas"""

global_temp = pd.read_csv('/content/GlobalTemperatures.csv')
global_temp_state = pd.read_csv('/content/GlobalLandTemperaturesByState.csv')
global_temp_Mcity = pd.read_csv('/content/GlobalLandTemperaturesByMajorCity.csv')
global_temp_country = pd.read_csv('/content/GlobalLandTemperaturesByCountry.csv')
global_temp_city = pd.read_csv('/content/GlobalLandTemperaturesByCity.csv')

gdp = pd.read_csv('/content/GDP.csv', skiprows=4)
population = pd.read_csv('/content/Population.csv', skiprows=4)
deforest = pd.read_csv('/content/Deforestation.csv')
co2 = pd.read_csv('/content/CO2.csv')

data = global_temp_country

global_temp_country.describe()

global_temp_country

data['month'] = data['dt']
data.dt = data.dt.apply(lambda x: x[0:4])

data.columns = ['year', 'AverageTemperature', 'AverageTemperatureUncertainty', 'Country', 'month']

data

data.dropna(axis=0, inplace=True)

data.groupby(data.year).AverageTemperature.mean()

data.year['1747']

temp_country_globalavg_df = data

temp_country_globalavg_df.groupby(by="year").AverageTemperature.mean().reset_index()